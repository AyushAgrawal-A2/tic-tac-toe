* {
  margin: 0;
  background-color: grey;
  box-sizing: border-box;
}

body {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100vh;
  width: 100vw;
}

h1 {
  margin: 2.5vh;
  font-size: 4em;
  text-decoration: underline;
}

.statusContainer {
  display: flex;
  width: min(90vw, 75vh);
  justify-content: space-between;
  align-items: center;
  margin-bottom: 5vh;
}

.restart {
  border: 2px solid black;
  border-radius: 0.3em;
  padding: 0.2em 0.4em;
  font-size: 2.5em;
  cursor: pointer;
}

.text {
  font-size: 2.5rem;
  text-decoration: underline;
}

.text:after {
  content: attr(data-text);
}

.board {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  justify-content: center;
  justify-items: center;
  align-items: center;
  align-content: center;
}

.appearIn {
  animation: appearIn 250ms linear 0s forwards;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
  border-top: none;
}

.cell:nth-child(3n + 1) {
  border-left: none;
}

.cell:nth-child(3n) {
  border-right: none;
}

.cell:nth-child(7),
.cell:nth-child(8),
.cell:nth-child(9) {
  border-bottom: none;
}

.cell {
  height: min(30vw, 25vh);
  width: min(30vw, 25vh);
  border: 2px solid black;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
}

.cell.x::before,
.cell.x::after,
.cell.o::before {
  background-color: white;
}

.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after,
.board.o .cell:not(.x):not(.o):hover::before {
  background-color: lightgrey;
}

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after {
  content: "";
  height: 100%;
  width: 15%;
  position: absolute;
  animation: appearIn 100ms linear 0s forwards;
}

.cell.x::before,
.board.x .cell:not(.x):not(.o):hover::before {
  rotate: 45deg;
}

.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::after {
  rotate: -45deg;
}

.cell.o::before,
.board.o .cell:not(.x):not(.o):hover::before {
  content: "";
  height: 90%;
  width: 90%;
  position: absolute;
  border-radius: 1e9px;
  animation: appearIn 100ms linear 0s forwards;
}

.cell.o::after,
.board.o .cell:not(.x):not(.o):hover::after {
  content: "";
  height: 60%;
  width: 60%;
  position: absolute;
  background-color: grey;
  border-radius: 1e9px;
  animation: appearIn 100ms linear 0s forwards;
}

.cell.zoom::before,
.cell.zoom::after {
  animation: zoom 500ms linear 0s alternate infinite;
}

@keyframes appearIn {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}

@keyframes zoom {
  from {
    transform: scale(0.9);
  }
  to {
    transform: scale(1.1);
  }
}
